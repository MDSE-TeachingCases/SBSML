/*
 * generated by Xtext 2.22.0
 */
grammar InternalSbsml;

options {
	superClass=AbstractInternalAntlrParser;
}

@lexer::header {
package at.ac.tuwien.big.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package at.ac.tuwien.big.parser.antlr.internal;

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.common.util.Enumerator;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import at.ac.tuwien.big.services.SbsmlGrammarAccess;

}

@parser::members {

 	private SbsmlGrammarAccess grammarAccess;

    public InternalSbsmlParser(TokenStream input, SbsmlGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }

    @Override
    protected String getFirstRuleName() {
    	return "SmartSystem";
   	}

   	@Override
   	protected SbsmlGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}

}

@rulecatch {
    catch (RecognitionException re) {
        recover(input,re);
        appendSkippedTokens();
    }
}

// Entry rule entryRuleSmartSystem
entryRuleSmartSystem returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSmartSystemRule()); }
	iv_ruleSmartSystem=ruleSmartSystem
	{ $current=$iv_ruleSmartSystem.current; }
	EOF;

// Rule SmartSystem
ruleSmartSystem returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='system'
		{
			newLeafNode(otherlv_0, grammarAccess.getSmartSystemAccess().getSystemKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getSmartSystemAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getSmartSystemRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_2='{'
		{
			newLeafNode(otherlv_2, grammarAccess.getSmartSystemAccess().getLeftCurlyBracketKeyword_2());
		}
		(
			otherlv_3='units'
			{
				newLeafNode(otherlv_3, grammarAccess.getSmartSystemAccess().getUnitsKeyword_3_0());
			}
			otherlv_4='{'
			{
				newLeafNode(otherlv_4, grammarAccess.getSmartSystemAccess().getLeftCurlyBracketKeyword_3_1());
			}
			(
				(
					(
						{
							newCompositeNode(grammarAccess.getSmartSystemAccess().getUnitsUnitParserRuleCall_3_2_0_0());
						}
						lv_units_5_0=ruleUnit
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getSmartSystemRule());
							}
							add(
								$current,
								"units",
								lv_units_5_0,
								"at.ac.tuwien.big.Sbsml.Unit");
							afterParserOrEnumRuleCall();
						}
					)
				)
				(
					otherlv_6=','
					{
						newLeafNode(otherlv_6, grammarAccess.getSmartSystemAccess().getCommaKeyword_3_2_1_0());
					}
					(
						(
							{
								newCompositeNode(grammarAccess.getSmartSystemAccess().getUnitsUnitParserRuleCall_3_2_1_1_0());
							}
							lv_units_7_0=ruleUnit
							{
								if ($current==null) {
									$current = createModelElementForParent(grammarAccess.getSmartSystemRule());
								}
								add(
									$current,
									"units",
									lv_units_7_0,
									"at.ac.tuwien.big.Sbsml.Unit");
								afterParserOrEnumRuleCall();
							}
						)
					)
				)*
			)?
			otherlv_8='}'
			{
				newLeafNode(otherlv_8, grammarAccess.getSmartSystemAccess().getRightCurlyBracketKeyword_3_3());
			}
		)?
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getSmartSystemAccess().getThingsThingParserRuleCall_4_0_0());
					}
					lv_things_9_0=ruleThing
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getSmartSystemRule());
						}
						add(
							$current,
							"things",
							lv_things_9_0,
							"at.ac.tuwien.big.Sbsml.Thing");
						afterParserOrEnumRuleCall();
					}
				)
			)
			    |
			(
				(
					{
						newCompositeNode(grammarAccess.getSmartSystemAccess().getConfigsConfigParserRuleCall_4_1_0());
					}
					lv_configs_10_0=ruleConfig
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getSmartSystemRule());
						}
						add(
							$current,
							"configs",
							lv_configs_10_0,
							"at.ac.tuwien.big.Sbsml.Config");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
		otherlv_11='}'
		{
			newLeafNode(otherlv_11, grammarAccess.getSmartSystemAccess().getRightCurlyBracketKeyword_5());
		}
	)
;

// Entry rule entryRuleUnit
entryRuleUnit returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getUnitRule()); }
	iv_ruleUnit=ruleUnit
	{ $current=$iv_ruleUnit.current; }
	EOF;

// Rule Unit
ruleUnit returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_name_0_0=RULE_ID
				{
					newLeafNode(lv_name_0_0, grammarAccess.getUnitAccess().getNameIDTerminalRuleCall_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getUnitRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_0_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		(
			otherlv_1='('
			{
				newLeafNode(otherlv_1, grammarAccess.getUnitAccess().getLeftParenthesisKeyword_1_0());
			}
			(
				(
					lv_abbreviation_2_0=RULE_STRING
					{
						newLeafNode(lv_abbreviation_2_0, grammarAccess.getUnitAccess().getAbbreviationSTRINGTerminalRuleCall_1_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getUnitRule());
						}
						setWithLastConsumed(
							$current,
							"abbreviation",
							lv_abbreviation_2_0,
							"org.eclipse.xtext.common.Terminals.STRING");
					}
				)
			)
			otherlv_3=')'
			{
				newLeafNode(otherlv_3, grammarAccess.getUnitAccess().getRightParenthesisKeyword_1_2());
			}
		)?
		otherlv_4=':'
		{
			newLeafNode(otherlv_4, grammarAccess.getUnitAccess().getColonKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getUnitAccess().getTypeDataTypeEnumRuleCall_3_0());
				}
				lv_type_5_0=ruleDataType
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getUnitRule());
					}
					set(
						$current,
						"type",
						lv_type_5_0,
						"at.ac.tuwien.big.Sbsml.DataType");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleThing
entryRuleThing returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getThingRule()); }
	iv_ruleThing=ruleThing
	{ $current=$iv_ruleThing.current; }
	EOF;

// Rule Thing
ruleThing returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getThingAccess().getSensorParserRuleCall_0());
		}
		this_Sensor_0=ruleSensor
		{
			$current = $this_Sensor_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getThingAccess().getActuatorParserRuleCall_1());
		}
		this_Actuator_1=ruleActuator
		{
			$current = $this_Actuator_1.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getThingAccess().getFogDeviceParserRuleCall_2());
		}
		this_FogDevice_2=ruleFogDevice
		{
			$current = $this_FogDevice_2.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRulePort
entryRulePort returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getPortRule()); }
	iv_rulePort=rulePort
	{ $current=$iv_rulePort.current; }
	EOF;

// Rule Port
rulePort returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_singleConnection_0_0='single'
				{
					newLeafNode(lv_singleConnection_0_0, grammarAccess.getPortAccess().getSingleConnectionSingleKeyword_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getPortRule());
					}
					setWithLastConsumed($current, "singleConnection", lv_singleConnection_0_0 != null, "single");
				}
			)
		)?
		otherlv_1='port'
		{
			newLeafNode(otherlv_1, grammarAccess.getPortAccess().getPortKeyword_1());
		}
		(
			(
				lv_name_2_0=RULE_ID
				{
					newLeafNode(lv_name_2_0, grammarAccess.getPortAccess().getNameIDTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getPortRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_2_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
	)
;

// Entry rule entryRuleSensor
entryRuleSensor returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSensorRule()); }
	iv_ruleSensor=ruleSensor
	{ $current=$iv_ruleSensor.current; }
	EOF;

// Rule Sensor
ruleSensor returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='sensor'
		{
			newLeafNode(otherlv_0, grammarAccess.getSensorAccess().getSensorKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getSensorAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getSensorRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_2='('
		{
			newLeafNode(otherlv_2, grammarAccess.getSensorAccess().getLeftParenthesisKeyword_2());
		}
		(
			(
				lv_shortName_3_0=RULE_ID
				{
					newLeafNode(lv_shortName_3_0, grammarAccess.getSensorAccess().getShortNameIDTerminalRuleCall_3_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getSensorRule());
					}
					setWithLastConsumed(
						$current,
						"shortName",
						lv_shortName_3_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_4=')'
		{
			newLeafNode(otherlv_4, grammarAccess.getSensorAccess().getRightParenthesisKeyword_4());
		}
		otherlv_5='{'
		{
			newLeafNode(otherlv_5, grammarAccess.getSensorAccess().getLeftCurlyBracketKeyword_5());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getSensorAccess().getPortsPortParserRuleCall_6_0());
				}
				lv_ports_6_0=rulePort
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSensorRule());
					}
					add(
						$current,
						"ports",
						lv_ports_6_0,
						"at.ac.tuwien.big.Sbsml.Port");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		(
			(
				{
					newCompositeNode(grammarAccess.getSensorAccess().getParametersSensorParamParserRuleCall_7_0());
				}
				lv_parameters_7_0=ruleSensorParam
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSensorRule());
					}
					add(
						$current,
						"parameters",
						lv_parameters_7_0,
						"at.ac.tuwien.big.Sbsml.SensorParam");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		otherlv_8='}'
		{
			newLeafNode(otherlv_8, grammarAccess.getSensorAccess().getRightCurlyBracketKeyword_8());
		}
	)
;

// Entry rule entryRuleSensorParam
entryRuleSensorParam returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSensorParamRule()); }
	iv_ruleSensorParam=ruleSensorParam
	{ $current=$iv_ruleSensorParam.current; }
	EOF;

// Rule SensorParam
ruleSensorParam returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='param'
		{
			newLeafNode(otherlv_0, grammarAccess.getSensorParamAccess().getParamKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getSensorParamAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getSensorParamRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_2=':'
		{
			newLeafNode(otherlv_2, grammarAccess.getSensorParamAccess().getColonKeyword_2());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getSensorParamRule());
					}
				}
				otherlv_3=RULE_ID
				{
					newLeafNode(otherlv_3, grammarAccess.getSensorParamAccess().getUnitUnitCrossReference_3_0());
				}
			)
		)
	)
;

// Entry rule entryRuleParameter
entryRuleParameter returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getParameterRule()); }
	iv_ruleParameter=ruleParameter
	{ $current=$iv_ruleParameter.current; }
	EOF;

// Rule Parameter
ruleParameter returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_name_0_0=RULE_ID
				{
					newLeafNode(lv_name_0_0, grammarAccess.getParameterAccess().getNameIDTerminalRuleCall_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getParameterRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_0_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_1=':'
		{
			newLeafNode(otherlv_1, grammarAccess.getParameterAccess().getColonKeyword_1());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getParameterRule());
					}
				}
				otherlv_2=RULE_ID
				{
					newLeafNode(otherlv_2, grammarAccess.getParameterAccess().getUnitUnitCrossReference_2_0());
				}
			)
		)
	)
;

// Entry rule entryRuleActuator
entryRuleActuator returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getActuatorRule()); }
	iv_ruleActuator=ruleActuator
	{ $current=$iv_ruleActuator.current; }
	EOF;

// Rule Actuator
ruleActuator returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='actuator'
		{
			newLeafNode(otherlv_0, grammarAccess.getActuatorAccess().getActuatorKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getActuatorAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getActuatorRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_2='('
		{
			newLeafNode(otherlv_2, grammarAccess.getActuatorAccess().getLeftParenthesisKeyword_2());
		}
		(
			(
				lv_shortName_3_0=RULE_ID
				{
					newLeafNode(lv_shortName_3_0, grammarAccess.getActuatorAccess().getShortNameIDTerminalRuleCall_3_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getActuatorRule());
					}
					setWithLastConsumed(
						$current,
						"shortName",
						lv_shortName_3_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_4=')'
		{
			newLeafNode(otherlv_4, grammarAccess.getActuatorAccess().getRightParenthesisKeyword_4());
		}
		otherlv_5='{'
		{
			newLeafNode(otherlv_5, grammarAccess.getActuatorAccess().getLeftCurlyBracketKeyword_5());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getActuatorAccess().getPortsPortParserRuleCall_6_0());
				}
				lv_ports_6_0=rulePort
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getActuatorRule());
					}
					add(
						$current,
						"ports",
						lv_ports_6_0,
						"at.ac.tuwien.big.Sbsml.Port");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		(
			(
				{
					newCompositeNode(grammarAccess.getActuatorAccess().getServicesServiceParserRuleCall_7_0());
				}
				lv_services_7_0=ruleService
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getActuatorRule());
					}
					add(
						$current,
						"services",
						lv_services_7_0,
						"at.ac.tuwien.big.Sbsml.Service");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		otherlv_8='}'
		{
			newLeafNode(otherlv_8, grammarAccess.getActuatorAccess().getRightCurlyBracketKeyword_8());
		}
	)
;

// Entry rule entryRuleService
entryRuleService returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getServiceRule()); }
	iv_ruleService=ruleService
	{ $current=$iv_ruleService.current; }
	EOF;

// Rule Service
ruleService returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='service'
		{
			newLeafNode(otherlv_0, grammarAccess.getServiceAccess().getServiceKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getServiceAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getServiceRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_2='('
		{
			newLeafNode(otherlv_2, grammarAccess.getServiceAccess().getLeftParenthesisKeyword_2());
		}
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getServiceAccess().getParametersParameterParserRuleCall_3_0_0());
					}
					lv_parameters_3_0=ruleParameter
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getServiceRule());
						}
						add(
							$current,
							"parameters",
							lv_parameters_3_0,
							"at.ac.tuwien.big.Sbsml.Parameter");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_4=','
				{
					newLeafNode(otherlv_4, grammarAccess.getServiceAccess().getCommaKeyword_3_1_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getServiceAccess().getParametersParameterParserRuleCall_3_1_1_0());
						}
						lv_parameters_5_0=ruleParameter
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getServiceRule());
							}
							add(
								$current,
								"parameters",
								lv_parameters_5_0,
								"at.ac.tuwien.big.Sbsml.Parameter");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
		)?
		otherlv_6=')'
		{
			newLeafNode(otherlv_6, grammarAccess.getServiceAccess().getRightParenthesisKeyword_4());
		}
		(
			otherlv_7='--'
			{
				newLeafNode(otherlv_7, grammarAccess.getServiceAccess().getHyphenMinusHyphenMinusKeyword_5_0());
			}
			(
				(
					lv_description_8_0=RULE_STRING
					{
						newLeafNode(lv_description_8_0, grammarAccess.getServiceAccess().getDescriptionSTRINGTerminalRuleCall_5_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getServiceRule());
						}
						setWithLastConsumed(
							$current,
							"description",
							lv_description_8_0,
							"org.eclipse.xtext.common.Terminals.STRING");
					}
				)
			)
		)?
	)
;

// Entry rule entryRuleFogDevice
entryRuleFogDevice returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getFogDeviceRule()); }
	iv_ruleFogDevice=ruleFogDevice
	{ $current=$iv_ruleFogDevice.current; }
	EOF;

// Rule FogDevice
ruleFogDevice returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='fogdevice'
		{
			newLeafNode(otherlv_0, grammarAccess.getFogDeviceAccess().getFogdeviceKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getFogDeviceAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getFogDeviceRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_2='('
		{
			newLeafNode(otherlv_2, grammarAccess.getFogDeviceAccess().getLeftParenthesisKeyword_2());
		}
		(
			(
				lv_shortName_3_0=RULE_ID
				{
					newLeafNode(lv_shortName_3_0, grammarAccess.getFogDeviceAccess().getShortNameIDTerminalRuleCall_3_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getFogDeviceRule());
					}
					setWithLastConsumed(
						$current,
						"shortName",
						lv_shortName_3_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_4=')'
		{
			newLeafNode(otherlv_4, grammarAccess.getFogDeviceAccess().getRightParenthesisKeyword_4());
		}
		otherlv_5='{'
		{
			newLeafNode(otherlv_5, grammarAccess.getFogDeviceAccess().getLeftCurlyBracketKeyword_5());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getFogDeviceAccess().getPortsPortParserRuleCall_6_0());
				}
				lv_ports_6_0=rulePort
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getFogDeviceRule());
					}
					add(
						$current,
						"ports",
						lv_ports_6_0,
						"at.ac.tuwien.big.Sbsml.Port");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		otherlv_7='mips'
		{
			newLeafNode(otherlv_7, grammarAccess.getFogDeviceAccess().getMipsKeyword_7());
		}
		otherlv_8=':'
		{
			newLeafNode(otherlv_8, grammarAccess.getFogDeviceAccess().getColonKeyword_8());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getFogDeviceAccess().getMipsELongParserRuleCall_9_0());
				}
				lv_mips_9_0=ruleELong
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getFogDeviceRule());
					}
					set(
						$current,
						"mips",
						lv_mips_9_0,
						"at.ac.tuwien.big.Sbsml.ELong");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_10='}'
		{
			newLeafNode(otherlv_10, grammarAccess.getFogDeviceAccess().getRightCurlyBracketKeyword_10());
		}
	)
;

// Entry rule entryRuleConfig
entryRuleConfig returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getConfigRule()); }
	iv_ruleConfig=ruleConfig
	{ $current=$iv_ruleConfig.current; }
	EOF;

// Rule Config
ruleConfig returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='config'
		{
			newLeafNode(otherlv_0, grammarAccess.getConfigAccess().getConfigKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getConfigAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getConfigRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_2='{'
		{
			newLeafNode(otherlv_2, grammarAccess.getConfigAccess().getLeftCurlyBracketKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getConfigAccess().getNodesNodeParserRuleCall_3_0());
				}
				lv_nodes_3_0=ruleNode
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getConfigRule());
					}
					add(
						$current,
						"nodes",
						lv_nodes_3_0,
						"at.ac.tuwien.big.Sbsml.Node");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		(
			otherlv_4='connections'
			{
				newLeafNode(otherlv_4, grammarAccess.getConfigAccess().getConnectionsKeyword_4_0());
			}
			otherlv_5=':'
			{
				newLeafNode(otherlv_5, grammarAccess.getConfigAccess().getColonKeyword_4_1());
			}
			otherlv_6='{'
			{
				newLeafNode(otherlv_6, grammarAccess.getConfigAccess().getLeftCurlyBracketKeyword_4_2());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getConfigAccess().getConnectionsConnectionParserRuleCall_4_3_0());
					}
					lv_connections_7_0=ruleConnection
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getConfigRule());
						}
						add(
							$current,
							"connections",
							lv_connections_7_0,
							"at.ac.tuwien.big.Sbsml.Connection");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_8=','
				{
					newLeafNode(otherlv_8, grammarAccess.getConfigAccess().getCommaKeyword_4_4_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getConfigAccess().getConnectionsConnectionParserRuleCall_4_4_1_0());
						}
						lv_connections_9_0=ruleConnection
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getConfigRule());
							}
							add(
								$current,
								"connections",
								lv_connections_9_0,
								"at.ac.tuwien.big.Sbsml.Connection");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
			otherlv_10='}'
			{
				newLeafNode(otherlv_10, grammarAccess.getConfigAccess().getRightCurlyBracketKeyword_4_5());
			}
		)?
		(
			(
				{
					newCompositeNode(grammarAccess.getConfigAccess().getControllersControllerParserRuleCall_5_0());
				}
				lv_controllers_11_0=ruleController
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getConfigRule());
					}
					add(
						$current,
						"controllers",
						lv_controllers_11_0,
						"at.ac.tuwien.big.Sbsml.Controller");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		otherlv_12='}'
		{
			newLeafNode(otherlv_12, grammarAccess.getConfigAccess().getRightCurlyBracketKeyword_6());
		}
	)
;

// Entry rule entryRuleNode
entryRuleNode returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getNodeRule()); }
	iv_ruleNode=ruleNode
	{ $current=$iv_ruleNode.current; }
	EOF;

// Rule Node
ruleNode returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='node'
		{
			newLeafNode(otherlv_0, grammarAccess.getNodeAccess().getNodeKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getNodeAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getNodeRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_2=':'
		{
			newLeafNode(otherlv_2, grammarAccess.getNodeAccess().getColonKeyword_2());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getNodeRule());
					}
				}
				otherlv_3=RULE_ID
				{
					newLeafNode(otherlv_3, grammarAccess.getNodeAccess().getThingThingCrossReference_3_0());
				}
			)
		)
	)
;

// Entry rule entryRuleConnection
entryRuleConnection returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getConnectionRule()); }
	iv_ruleConnection=ruleConnection
	{ $current=$iv_ruleConnection.current; }
	EOF;

// Rule Connection
ruleConnection returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getConnectionRule());
					}
				}
				otherlv_0=RULE_ID
				{
					newLeafNode(otherlv_0, grammarAccess.getConnectionAccess().getNodeANodeCrossReference_0_0());
				}
			)
		)
		otherlv_1='.'
		{
			newLeafNode(otherlv_1, grammarAccess.getConnectionAccess().getFullStopKeyword_1());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getConnectionRule());
					}
				}
				otherlv_2=RULE_ID
				{
					newLeafNode(otherlv_2, grammarAccess.getConnectionAccess().getPortAPortCrossReference_2_0());
				}
			)
		)
		otherlv_3='>-<'
		{
			newLeafNode(otherlv_3, grammarAccess.getConnectionAccess().getGreaterThanSignHyphenMinusLessThanSignKeyword_3());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getConnectionRule());
					}
				}
				otherlv_4=RULE_ID
				{
					newLeafNode(otherlv_4, grammarAccess.getConnectionAccess().getNodeBNodeCrossReference_4_0());
				}
			)
		)
		otherlv_5='.'
		{
			newLeafNode(otherlv_5, grammarAccess.getConnectionAccess().getFullStopKeyword_5());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getConnectionRule());
					}
				}
				otherlv_6=RULE_ID
				{
					newLeafNode(otherlv_6, grammarAccess.getConnectionAccess().getPortBPortCrossReference_6_0());
				}
			)
		)
	)
;

// Entry rule entryRuleController
entryRuleController returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getControllerRule()); }
	iv_ruleController=ruleController
	{ $current=$iv_ruleController.current; }
	EOF;

// Rule Controller
ruleController returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='controller'
		{
			newLeafNode(otherlv_0, grammarAccess.getControllerAccess().getControllerKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getControllerAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getControllerRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_2='computed'
		{
			newLeafNode(otherlv_2, grammarAccess.getControllerAccess().getComputedKeyword_2());
		}
		otherlv_3='on'
		{
			newLeafNode(otherlv_3, grammarAccess.getControllerAccess().getOnKeyword_3());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getControllerRule());
					}
				}
				otherlv_4=RULE_ID
				{
					newLeafNode(otherlv_4, grammarAccess.getControllerAccess().getComputationNodeNodeCrossReference_4_0());
				}
			)
		)
		otherlv_5='{'
		{
			newLeafNode(otherlv_5, grammarAccess.getControllerAccess().getLeftCurlyBracketKeyword_5());
		}
		otherlv_6='mips'
		{
			newLeafNode(otherlv_6, grammarAccess.getControllerAccess().getMipsKeyword_6());
		}
		otherlv_7=':'
		{
			newLeafNode(otherlv_7, grammarAccess.getControllerAccess().getColonKeyword_7());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getControllerAccess().getMipsELongParserRuleCall_8_0());
				}
				lv_mips_8_0=ruleELong
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getControllerRule());
					}
					set(
						$current,
						"mips",
						lv_mips_8_0,
						"at.ac.tuwien.big.Sbsml.ELong");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_9='on'
		{
			newLeafNode(otherlv_9, grammarAccess.getControllerAccess().getOnKeyword_9());
		}
		otherlv_10=':'
		{
			newLeafNode(otherlv_10, grammarAccess.getControllerAccess().getColonKeyword_10());
		}
		otherlv_11='{'
		{
			newLeafNode(otherlv_11, grammarAccess.getControllerAccess().getLeftCurlyBracketKeyword_11());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getControllerAccess().getThresholdThresholdParserRuleCall_12_0());
				}
				lv_threshold_12_0=ruleThreshold
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getControllerRule());
					}
					add(
						$current,
						"threshold",
						lv_threshold_12_0,
						"at.ac.tuwien.big.Sbsml.Threshold");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_13=','
			{
				newLeafNode(otherlv_13, grammarAccess.getControllerAccess().getCommaKeyword_13_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getControllerAccess().getThresholdThresholdParserRuleCall_13_1_0());
					}
					lv_threshold_14_0=ruleThreshold
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getControllerRule());
						}
						add(
							$current,
							"threshold",
							lv_threshold_14_0,
							"at.ac.tuwien.big.Sbsml.Threshold");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
		otherlv_15='}'
		{
			newLeafNode(otherlv_15, grammarAccess.getControllerAccess().getRightCurlyBracketKeyword_14());
		}
		otherlv_16='call'
		{
			newLeafNode(otherlv_16, grammarAccess.getControllerAccess().getCallKeyword_15());
		}
		otherlv_17=':'
		{
			newLeafNode(otherlv_17, grammarAccess.getControllerAccess().getColonKeyword_16());
		}
		otherlv_18='{'
		{
			newLeafNode(otherlv_18, grammarAccess.getControllerAccess().getLeftCurlyBracketKeyword_17());
		}
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getControllerAccess().getServicecallsServiceCallParserRuleCall_18_0_0());
					}
					lv_servicecalls_19_0=ruleServiceCall
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getControllerRule());
						}
						add(
							$current,
							"servicecalls",
							lv_servicecalls_19_0,
							"at.ac.tuwien.big.Sbsml.ServiceCall");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_20=';'
			{
				newLeafNode(otherlv_20, grammarAccess.getControllerAccess().getSemicolonKeyword_18_1());
			}
		)*
		otherlv_21='}'
		{
			newLeafNode(otherlv_21, grammarAccess.getControllerAccess().getRightCurlyBracketKeyword_19());
		}
		otherlv_22='}'
		{
			newLeafNode(otherlv_22, grammarAccess.getControllerAccess().getRightCurlyBracketKeyword_20());
		}
	)
;

// Entry rule entryRuleThreshold
entryRuleThreshold returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getThresholdRule()); }
	iv_ruleThreshold=ruleThreshold
	{ $current=$iv_ruleThreshold.current; }
	EOF;

// Rule Threshold
ruleThreshold returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getThresholdAccess().getIntThresholdParserRuleCall_0());
		}
		this_IntThreshold_0=ruleIntThreshold
		{
			$current = $this_IntThreshold_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getThresholdAccess().getFloatThresholdParserRuleCall_1());
		}
		this_FloatThreshold_1=ruleFloatThreshold
		{
			$current = $this_FloatThreshold_1.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getThresholdAccess().getBoolThresholdParserRuleCall_2());
		}
		this_BoolThreshold_2=ruleBoolThreshold
		{
			$current = $this_BoolThreshold_2.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleIntThreshold
entryRuleIntThreshold returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getIntThresholdRule()); }
	iv_ruleIntThreshold=ruleIntThreshold
	{ $current=$iv_ruleIntThreshold.current; }
	EOF;

// Rule IntThreshold
ruleIntThreshold returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='IntThreshold'
		{
			newLeafNode(otherlv_0, grammarAccess.getIntThresholdAccess().getIntThresholdKeyword_0());
		}
		otherlv_1='('
		{
			newLeafNode(otherlv_1, grammarAccess.getIntThresholdAccess().getLeftParenthesisKeyword_1());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getIntThresholdRule());
					}
				}
				otherlv_2=RULE_ID
				{
					newLeafNode(otherlv_2, grammarAccess.getIntThresholdAccess().getSourceNodeCrossReference_2_0());
				}
			)
		)
		otherlv_3='.'
		{
			newLeafNode(otherlv_3, grammarAccess.getIntThresholdAccess().getFullStopKeyword_3());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getIntThresholdRule());
					}
				}
				otherlv_4=RULE_ID
				{
					newLeafNode(otherlv_4, grammarAccess.getIntThresholdAccess().getParameterParameterCrossReference_4_0());
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getIntThresholdAccess().getComperatorComparatorEnumRuleCall_5_0());
				}
				lv_comperator_5_0=ruleComparator
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getIntThresholdRule());
					}
					set(
						$current,
						"comperator",
						lv_comperator_5_0,
						"at.ac.tuwien.big.Sbsml.Comparator");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				lv_value_6_0=RULE_INT
				{
					newLeafNode(lv_value_6_0, grammarAccess.getIntThresholdAccess().getValueINTTerminalRuleCall_6_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getIntThresholdRule());
					}
					setWithLastConsumed(
						$current,
						"value",
						lv_value_6_0,
						"org.eclipse.xtext.common.Terminals.INT");
				}
			)
		)
		otherlv_7=')'
		{
			newLeafNode(otherlv_7, grammarAccess.getIntThresholdAccess().getRightParenthesisKeyword_7());
		}
	)
;

// Entry rule entryRuleFloatThreshold
entryRuleFloatThreshold returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getFloatThresholdRule()); }
	iv_ruleFloatThreshold=ruleFloatThreshold
	{ $current=$iv_ruleFloatThreshold.current; }
	EOF;

// Rule FloatThreshold
ruleFloatThreshold returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='FloatThreshold'
		{
			newLeafNode(otherlv_0, grammarAccess.getFloatThresholdAccess().getFloatThresholdKeyword_0());
		}
		otherlv_1='('
		{
			newLeafNode(otherlv_1, grammarAccess.getFloatThresholdAccess().getLeftParenthesisKeyword_1());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getFloatThresholdRule());
					}
				}
				otherlv_2=RULE_ID
				{
					newLeafNode(otherlv_2, grammarAccess.getFloatThresholdAccess().getSourceNodeCrossReference_2_0());
				}
			)
		)
		otherlv_3='.'
		{
			newLeafNode(otherlv_3, grammarAccess.getFloatThresholdAccess().getFullStopKeyword_3());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getFloatThresholdRule());
					}
				}
				otherlv_4=RULE_ID
				{
					newLeafNode(otherlv_4, grammarAccess.getFloatThresholdAccess().getParameterParameterCrossReference_4_0());
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getFloatThresholdAccess().getComperatorComparatorEnumRuleCall_5_0());
				}
				lv_comperator_5_0=ruleComparator
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getFloatThresholdRule());
					}
					set(
						$current,
						"comperator",
						lv_comperator_5_0,
						"at.ac.tuwien.big.Sbsml.Comparator");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				lv_value_6_0=RULE_FLOAT
				{
					newLeafNode(lv_value_6_0, grammarAccess.getFloatThresholdAccess().getValueFLOATTerminalRuleCall_6_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getFloatThresholdRule());
					}
					setWithLastConsumed(
						$current,
						"value",
						lv_value_6_0,
						"at.ac.tuwien.big.Sbsml.FLOAT");
				}
			)
		)
		otherlv_7=')'
		{
			newLeafNode(otherlv_7, grammarAccess.getFloatThresholdAccess().getRightParenthesisKeyword_7());
		}
	)
;

// Entry rule entryRuleBoolThreshold
entryRuleBoolThreshold returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getBoolThresholdRule()); }
	iv_ruleBoolThreshold=ruleBoolThreshold
	{ $current=$iv_ruleBoolThreshold.current; }
	EOF;

// Rule BoolThreshold
ruleBoolThreshold returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='BoolThreshold'
		{
			newLeafNode(otherlv_0, grammarAccess.getBoolThresholdAccess().getBoolThresholdKeyword_0());
		}
		otherlv_1='('
		{
			newLeafNode(otherlv_1, grammarAccess.getBoolThresholdAccess().getLeftParenthesisKeyword_1());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getBoolThresholdRule());
					}
				}
				otherlv_2=RULE_ID
				{
					newLeafNode(otherlv_2, grammarAccess.getBoolThresholdAccess().getSourceNodeCrossReference_2_0());
				}
			)
		)
		otherlv_3='.'
		{
			newLeafNode(otherlv_3, grammarAccess.getBoolThresholdAccess().getFullStopKeyword_3());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getBoolThresholdRule());
					}
				}
				otherlv_4=RULE_ID
				{
					newLeafNode(otherlv_4, grammarAccess.getBoolThresholdAccess().getParameterParameterCrossReference_4_0());
				}
			)
		)
		otherlv_5='='
		{
			newLeafNode(otherlv_5, grammarAccess.getBoolThresholdAccess().getEqualsSignKeyword_5());
		}
		(
			(
				lv_triggerOn_6_0=RULE_BOOL
				{
					newLeafNode(lv_triggerOn_6_0, grammarAccess.getBoolThresholdAccess().getTriggerOnBOOLTerminalRuleCall_6_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getBoolThresholdRule());
					}
					setWithLastConsumed(
						$current,
						"triggerOn",
						lv_triggerOn_6_0,
						"at.ac.tuwien.big.Sbsml.BOOL");
				}
			)
		)
		otherlv_7=')'
		{
			newLeafNode(otherlv_7, grammarAccess.getBoolThresholdAccess().getRightParenthesisKeyword_7());
		}
	)
;

// Entry rule entryRuleServiceCall
entryRuleServiceCall returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getServiceCallRule()); }
	iv_ruleServiceCall=ruleServiceCall
	{ $current=$iv_ruleServiceCall.current; }
	EOF;

// Rule ServiceCall
ruleServiceCall returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getServiceCallRule());
					}
				}
				otherlv_0=RULE_ID
				{
					newLeafNode(otherlv_0, grammarAccess.getServiceCallAccess().getNodeNodeCrossReference_0_0());
				}
			)
		)
		otherlv_1='.'
		{
			newLeafNode(otherlv_1, grammarAccess.getServiceCallAccess().getFullStopKeyword_1());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getServiceCallRule());
					}
				}
				otherlv_2=RULE_ID
				{
					newLeafNode(otherlv_2, grammarAccess.getServiceCallAccess().getServiceServiceCrossReference_2_0());
				}
			)
		)
		otherlv_3='('
		{
			newLeafNode(otherlv_3, grammarAccess.getServiceCallAccess().getLeftParenthesisKeyword_3());
		}
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getServiceCallAccess().getArgumentsArgumentParserRuleCall_4_0_0());
					}
					lv_arguments_4_0=ruleArgument
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getServiceCallRule());
						}
						add(
							$current,
							"arguments",
							lv_arguments_4_0,
							"at.ac.tuwien.big.Sbsml.Argument");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_5=','
				{
					newLeafNode(otherlv_5, grammarAccess.getServiceCallAccess().getCommaKeyword_4_1_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getServiceCallAccess().getArgumentsArgumentParserRuleCall_4_1_1_0());
						}
						lv_arguments_6_0=ruleArgument
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getServiceCallRule());
							}
							add(
								$current,
								"arguments",
								lv_arguments_6_0,
								"at.ac.tuwien.big.Sbsml.Argument");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
		)?
		otherlv_7=')'
		{
			newLeafNode(otherlv_7, grammarAccess.getServiceCallAccess().getRightParenthesisKeyword_5());
		}
	)
;

// Entry rule entryRuleArgument
entryRuleArgument returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getArgumentRule()); }
	iv_ruleArgument=ruleArgument
	{ $current=$iv_ruleArgument.current; }
	EOF;

// Rule Argument
ruleArgument returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				newCompositeNode(grammarAccess.getArgumentAccess().getStringValueArgParserRuleCall_0());
			}
			lv_stringValue_0_0=ruleArg
			{
				if ($current==null) {
					$current = createModelElementForParent(grammarAccess.getArgumentRule());
				}
				set(
					$current,
					"stringValue",
					lv_stringValue_0_0,
					"at.ac.tuwien.big.Sbsml.Arg");
				afterParserOrEnumRuleCall();
			}
		)
	)
;

// Entry rule entryRuleArg
entryRuleArg returns [String current=null]:
	{ newCompositeNode(grammarAccess.getArgRule()); }
	iv_ruleArg=ruleArg
	{ $current=$iv_ruleArg.current.getText(); }
	EOF;

// Rule Arg
ruleArg returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		this_INT_0=RULE_INT
		{
			$current.merge(this_INT_0);
		}
		{
			newLeafNode(this_INT_0, grammarAccess.getArgAccess().getINTTerminalRuleCall_0());
		}
		    |
		this_FLOAT_1=RULE_FLOAT
		{
			$current.merge(this_FLOAT_1);
		}
		{
			newLeafNode(this_FLOAT_1, grammarAccess.getArgAccess().getFLOATTerminalRuleCall_1());
		}
		    |
		this_BOOL_2=RULE_BOOL
		{
			$current.merge(this_BOOL_2);
		}
		{
			newLeafNode(this_BOOL_2, grammarAccess.getArgAccess().getBOOLTerminalRuleCall_2());
		}
	)
;

// Entry rule entryRuleELong
entryRuleELong returns [String current=null]:
	{ newCompositeNode(grammarAccess.getELongRule()); }
	iv_ruleELong=ruleELong
	{ $current=$iv_ruleELong.current.getText(); }
	EOF;

// Rule ELong
ruleELong returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	this_INT_0=RULE_INT
	{
		$current.merge(this_INT_0);
	}
	{
		newLeafNode(this_INT_0, grammarAccess.getELongAccess().getINTTerminalRuleCall());
	}
;

// Rule DataType
ruleDataType returns [Enumerator current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			enumLiteral_0='int'
			{
				$current = grammarAccess.getDataTypeAccess().getINTEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_0, grammarAccess.getDataTypeAccess().getINTEnumLiteralDeclaration_0());
			}
		)
		    |
		(
			enumLiteral_1='float'
			{
				$current = grammarAccess.getDataTypeAccess().getFLOATEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_1, grammarAccess.getDataTypeAccess().getFLOATEnumLiteralDeclaration_1());
			}
		)
		    |
		(
			enumLiteral_2='bool'
			{
				$current = grammarAccess.getDataTypeAccess().getBOOLEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_2, grammarAccess.getDataTypeAccess().getBOOLEnumLiteralDeclaration_2());
			}
		)
	)
;

// Rule Comparator
ruleComparator returns [Enumerator current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			enumLiteral_0='>'
			{
				$current = grammarAccess.getComparatorAccess().getGREATEREnumLiteralDeclaration_0().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_0, grammarAccess.getComparatorAccess().getGREATEREnumLiteralDeclaration_0());
			}
		)
		    |
		(
			enumLiteral_1='<'
			{
				$current = grammarAccess.getComparatorAccess().getSMALLEREnumLiteralDeclaration_1().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_1, grammarAccess.getComparatorAccess().getSMALLEREnumLiteralDeclaration_1());
			}
		)
	)
;

RULE_FLOAT : '-'? ('0'..'9')* '.' ('0'..'9')+ (('E'|'e') '-'? ('0'..'9')+)?;

RULE_BOOL : ('true'|'false');

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
